## ðŸ“… Day 8 â€“ Default values, throwing functions
**Date:** August 11, 2025  
**Focus:** Default values use cases and how to use throwing functions for error management

---

### ðŸ§  What I Learned
- Default values in function parameters
- Error management
- throws & thrwo
- do, try, catch

---

### ðŸ’» Code Example
import Cocoa

//How to provide default values for parameters

//The below code is an example of a default parameter
func printTimesTable(for number: Int, end: Int = 12) {      //The '= 12' part is the default value for our end point if I don't specify it in the function
    for i in 1...end {
        print("\(i) x \(number) is \(i * number)")
    }
}

printTimesTable(for: 5, end: 20)
printTimesTable(for: 8)


//Another example of a default parameter
var characters = ["Lana", "Pam", "Ray", "Sterling"]
print(characters.count)
characters.removeAll(keepingCapacity: true)
print(characters.count)



//How to handle errors in functions
enum PasswordError: Error {
    case short,
    obvious
}

func checkPassword(_ password: String) throws -> String {
    if password.count < 5 { throw PasswordError.short }
    if password == "12345" {throw PasswordError.obvious }
    
    if password.count < 8 {
        return "OK"
    } else if password.count < 10 {
        return "Good"
    } else {
        return "Excellent"
    }
}


let string = "12345"

do {
    let result = try checkPassword(string)
    print("Password rating: \(result)")
} catch PasswordError.short {
    print("Please use a longer password.")
} catch PasswordError.obvious {
    print("I have the same combination on my luggage!")
} catch {
    print("There was an error: \(error.localizedDescription)")      //error.localizedDescription - This will provide Apple's own internal error description.
}
